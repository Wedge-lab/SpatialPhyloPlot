[{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"purpose vignette show users plot customise plotting phylogenetic trees top Visium spatial transcriptomics data. Please note, trees produced SpatialPhyloPlot intended show spatial relationship clones. Thus, length segments tree represent genetic distance.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\") devtools::install_github(\"Wedge-lab/SpatialPhyloPlot\", dependencies = TRUE) library(SpatialPhyloPlot)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"inputs","dir":"Articles","previous_headings":"","what":"Inputs","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"SpatialPhyloPlot 6 essential inputs: visium_version: V1 V2 newick_file: Path .new phylogenetic tree image_file: Path tissue_hires_image.png tissue_positions_file: Path tissue_positions_list.csv scale_factors: Path scalefactors_json.json clone_df: data frame linking Visium barcodes phylogenetic tree clones first part vignette ’ll using Visium 10X data Human Brain Cancer 11 mm Capture Area (FFPE) data set provided 10X Genomics Visium data set, dummy tree dummy clones purposes illustration.","code":"newick_file <- system.file(\"extdata\", \"demo.new\", package = \"SpatialPhyloPlot\")  image_file <- system.file(\"extdata\", \"tissue_hires_image.png\", package = \"SpatialPhyloPlot\")  tissue_positions_file <- system.file(\"extdata\", \"tissue_positions.csv\", package = \"SpatialPhyloPlot\")  scale_factors_file <- system.file(\"extdata\", \"scalefactors_json.json\", package = \"SpatialPhyloPlot\")  clone_df <- readRDS(system.file(\"extdata\", \"clone_df.rds\", package = \"SpatialPhyloPlot\"))"},{"path":[]},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"visium-spots","dir":"Articles","previous_headings":"Basic plot features","what":"Visium spots","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"default, SpatialPhyloPlot plots Visium spot point opacity 0.8, plot_points = TRUE point_alpha = 0.8 default.  Users can choose modify plotting opacity points modifying two parameters:","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\") SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_points = FALSE) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  point_alpha = 0.2)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"centroids","dir":"Articles","previous_headings":"Basic plot features","what":"Centroids","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"default, SpatialPhyloPlot plots central point, centroid, clones, location calculated average x y coordinates spots making clones. centroids plotted default opacity 0.9 point size 8, centroid_alpha = 0.9 centroid_size = 8 default. wish plot centroids easiest way setting centroid_alpha = 0.  Similarly, centroid size can modulated changing centroid_size:","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  centroid_alpha = 0) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  centroid_size = 16)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"polygons","dir":"Articles","previous_headings":"Basic plot features","what":"Polygons","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"Polygons can plotted around clone setting plot_polygon = TRUE.  order polygon shaded, need change hull_alpha parameter, set 0 default:  Depending nature data, may also want modulate hull_expansion parameter, customise tightly polygon hull fits points. default value 0.005.  Plotting polygons without Visium spots can great, minimal, way presenting data way allows underlying histology visualised well:  Note, plotting polygons (centroids trees) top data may look nice clones intermixed, rather spatially distinct:","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_polygon = TRUE) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_polygon = TRUE,                  hull_alpha = 0.5) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_polygon = TRUE,                  hull_alpha = 0.5,                  hull_expansion = 0.02) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_polygon = TRUE,                  plot_points = FALSE,                  hull_alpha = 0.5) clone_df_mixed <- clone_df clone_df_mixed$group <- sample(c(\"A\",\"B\",\"C\",\"D\"), 10878, replace = TRUE) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df_mixed,                  clone_group_column = \"group\",                  plot_polygon = TRUE,                  hull_alpha = 0.3)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"modifying-appearance-of-points","dir":"Articles","previous_headings":"Basic plot features","what":"Modifying appearance of points","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"appearance points representing Visium spots can modified using point_size point_shape parameters.","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  point_size = 1) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  point_shape = 18)"},{"path":[]},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"point-node-and-polygon-colours","dir":"Articles","previous_headings":"Basic plot features > Modifying colours","what":"Point, node, and polygon colours","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"wish use specific colours represent clones, can passing list colours named clones palette parameter.","code":"my_clone_colours <- list(\"A\" = \"#183667\",                          \"B\" = \"#ddebee\",                          \"C\" = \"#b8badd\",                          \"D\" = \"#B9D8DC\") my_clone_colours #> $A #> [1] \"#183667\" #>  #> $B #> [1] \"#ddebee\" #>  #> $C #> [1] \"#b8badd\" #>  #> $D #> [1] \"#B9D8DC\" SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  palette = my_clone_colours)"},{"path":[]},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"colour","dir":"Articles","previous_headings":"Basic plot features > Modifying segments","what":"Colour","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"colour segments joining centroids can changed using segment_colour option. default \"grey\".  can also adjust width opacity joining segments using segment_width segment_alpha.","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  segment_colour = \"black\") SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  segment_colour = \"black\",                  segment_width = 6,                  segment_alpha = 0.4)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"plotting-internal-nodes","dir":"Articles","previous_headings":"Basic plot features","what":"Plotting internal nodes","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"Phylogenetic trees often internal nodes, represented clones tissue. like plot internal nodes tree separate nodes, can done setting plot_internal_nodes = TRUE. particularly useful segments linking clones close overlapping. position internal nodes calculated average x y position nodes connecting .  appearance internal nodes can adjusted chaning internal_node_colour, internal_node_size, internal_node_alpha parameters.","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_internal_nodes = TRUE) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  plot_internal_nodes = TRUE,                  internal_node_colour = \"red\",                  internal_node_size = 5,                  internal_node_alpha = 1)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"anchoring-trees","dir":"Articles","previous_headings":"Basic plot features","what":"Anchoring trees","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"certain situations, users may add anchor point phylogenetic tree start . need provide coordinates want plot anchor point (origin_coord), name internal node clone want anchor point refer , appears Newick phylogenetic tree file (origin_name).","code":"# SpatialPhyloPlot(visium_version = \"V2\", #                  newick_file = newick_file, #                  image_file = image_file, #                  scale_factors = scale_factors_file, #                  tissue_positions_file = tissue_positions_file,  #                  clone_df = clone_df, #                  clone_group_column = \"group\", #                  origin_coord = c(0,0.5), #                  origin_name = )"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"plotting-multiple-samples","dir":"Articles","previous_headings":"","what":"Plotting multiple samples","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"Plotting multiple samples particularly useful representing relationships multiple samples patient, paired primary metastatic tumours. first sample provided always plotted middle, [0,1] coordinate system. sample, samples, can plotted left, right, , main sample. plotting multiple samples assume share phylogenetic tree Visium version require separate image, scale factor, tissue position, clone data frame. work different ways plot two samples together. plotting multiple samples together must always set multisample = TRUE. Phylogenetic trees can plotted separately sample, can plot single phylogenetic tree across samples. appropriate approach depend underlying data, clones tree constructed.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"plotting-multiple-samples-with-a-shared-tree","dir":"Articles","previous_headings":"Plotting multiple samples","what":"Plotting multiple samples with a shared tree","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"plot single tree across two samples, simply need specify running multisample = TRUE provide necessary input files. particularly useful copy number inferred separately different samples phylogenetic tree built jointly.","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  multisample = TRUE,                  image_file_left = image_file,                  clone_df_left = clone_df,                  tissue_positions_file_left = tissue_positions_file,                  scale_factors_left = scale_factors_file)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"plotting-multiple-samples-with-separate-trees","dir":"Articles","previous_headings":"Plotting multiple samples","what":"Plotting multiple samples with separate trees","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"cases may appropriate plot separate tree sample, particular clones shared across samples can occur copy number inferred jointly. case specify shared_clones = TRUE indicate one clone found samples. SpatialPhyloPlot plot relevant portion tree .  plotting cases couple clones shared two samples, can useful highlight plotting dashed connections setting plot_connections = TRUE. appearance connections can adjusted altering connection_width connection_colour parameters.","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  multisample = TRUE,                  image_file_left = image_file,                  clone_df_left = clone_df,                  tissue_positions_file_left = tissue_positions_file,                  scale_factors_left = scale_factors_file,                  shared_clones = TRUE) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\",                  multisample = TRUE,                  image_file_left = image_file,                  clone_df_left = clone_df,                  tissue_positions_file_left = tissue_positions_file,                  scale_factors_left = scale_factors_file,                  shared_clones = TRUE,                  plot_connections = TRUE)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/articles/exploring_plotting_options_in_SpatialPhyloPlot.html","id":"adding-annotations","dir":"Articles","previous_headings":"","what":"Adding annotations","title":"Exploring plotting options in `SpatialPhyloPlot`","text":"outputs SpatialPhyloPlot ggplot2 plots can easily annotated customised using ggplot2 functions. [0,1] coordinate system plot uses makes placing annotations simple well. Annotating plots can particularly useful highlighting areas interesting pathology.","code":"library(ggplot2) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  scale_factors = scale_factors_file,                  tissue_positions_file = tissue_positions_file,                   clone_df = clone_df,                  clone_group_column = \"group\")+   annotate(\"text\", x = 0.8, y = 0.8, label = \"Really interesting\\narea\")+   geom_rect(aes(xmin = 0.7, xmax = 0.9, ymin = 0.5, ymax = 0.75), fill = NA, colour = \"black\")"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Maria Jakobsdottir. Author, maintainer.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Jakobsdottir M (2025). SpatialPhyloPlot: Automated Plotting Phylogenetic Trees Spatial Transcriptomics Data. R package version 0.4.0, https://github.com/Wedge-lab/SpatialPhyloPlot.","code":"@Manual{,   title = {SpatialPhyloPlot: Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data},   author = {Maria Jakobsdottir},   year = {2025},   note = {R package version 0.4.0},   url = {https://github.com/Wedge-lab/SpatialPhyloPlot}, }"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"spatialphyloplot","dir":"","previous_headings":"","what":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"R package plotting phylogenetic trees Visium 10X spatial transcriptomics data automated way. SpatialPhyloPlot work progress - follow along please watch star repository check back updates!  Introduction Citation Installation Static single sample Static multi-sample detailed examples Future Developments","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"SpatialPhyloPlot R package automated plotting phylogenetic trees derived spatial transcriptomic data top spatial transcriptomics tissue image. package currently compatible Visium 10X data phylogenetic trees provided Newick file format, produced MEDICC2. Please keep eye upcoming pre-print!","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"use SpatialPhyloPlot work please cite package : Jakobsdottir M (2025). SpatialPhyloPlot: Automated Plotting Phylogenetic Trees Spatial Transcriptomics Data. R package version [insert correct version ], https://github.com/Wedge-lab/SpatialPhyloPlot. BibTeX entry LaTeX users citation version used can generated running:","code":"@Manual{,     title = {SpatialPhyloPlot: Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data},     author = {Maria Jakobsdottir},     year = {2025},     note = {R package version [insert correct version here]},     url = {https://github.com/Wedge-lab/SpatialPhyloPlot},   } citation(\"SpatialPhyloPlot\")"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"install SpatialPhyloPlot run:","code":"if (!require(\"devtools\", quietly = TRUE))     install.packages(\"devtools\") devtools::install_github(\"Wedge-lab/SpatialPhyloPlot\", dependencies = TRUE)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"SpatialPhyloPlot 6 essential inputs: visium_version: V1 V2 newick_file: Path .new phylogenetic tree image_file: Path tissue_hires_image.png tissue_positions_file: Path tissue_positions_list.csv scale_factors: Path scalefactors_json.json clone_df: data frame linking Visium barcodes phylogenetic tree clones ’ll demonstrate run SpatialPhyloPlot example data provided package. Visium 10X data Human Brain Cancer 11 mm Capture Area (FFPE) data set provided 10X Genomics. Please note: phylogenetic tree clones provided dummy data intended illustration purposes represent formal copy number phylogenetic tree analysis sample.","code":"library(SpatialPhyloPlot) # Get directory of files provided with SpatialPhyloPlot newick_file <- system.file(\"extdata\", \"demo.new\", package = \"SpatialPhyloPlot\") image_file <- system.file(\"extdata\", \"tissue_hires_image.png\", package = \"SpatialPhyloPlot\") tissue_positions_file <- system.file(\"extdata\", \"tissue_positions.csv\", package = \"SpatialPhyloPlot\") scale_factors_file <- system.file(\"extdata\", \"scalefactors_json.json\", package = \"SpatialPhyloPlot\") clone_df <- readRDS(system.file(\"extdata\", \"clone_df.rds\", package = \"SpatialPhyloPlot\"))"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"static-single-sample","dir":"","previous_headings":"Example","what":"Static single sample","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  tissue_positions_file = tissue_positions_file,                  scale_factors = scale_factors_file,                  clone_df = clone_df,                  clone_group_column = \"group\",                  clone_barcode_column = \"Barcode\",                  point_alpha = 0.5,                  )"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"static-multi-sample","dir":"","previous_headings":"Example","what":"Static multi-sample","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"want plot separate phylogenetic tree linking common clones two samples recommend using plot_connections = TRUE, plot_internal_nodes = TRUE, shared_clones = TRUE options.  want plot single joint phylogenetic tree recommend using plot_internal_nodes = TRUE shared_clones = FALSE options.","code":"SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  tissue_positions_file = tissue_positions_file,                  scale_factors = scale_factors_file,                  clone_df = clone_df,                  clone_group_column = \"group\",                  clone_barcode_column = \"Barcode\",                  image_file_left = image_file,                  tissue_positions_file_left = tissue_positions_file,                  scale_factors_left = scale_factors_file,                  clone_df_left = clone_df,                  multisample = TRUE,                  plot_connections = TRUE,                  plot_internal_nodes = TRUE,                  shared_clones = TRUE,                  point_alpha = 0.5) SpatialPhyloPlot(visium_version = \"V2\",                  newick_file = newick_file,                  image_file = image_file,                  tissue_positions_file = tissue_positions_file,                  scale_factors = scale_factors_file,                  clone_df = clone_df,                  clone_group_column = \"group\",                  clone_barcode_column = \"Barcode\",                  image_file_left = image_file,                  tissue_positions_file_left = tissue_positions_file,                  scale_factors_left = scale_factors_file,                  clone_df_left = clone_df,                  multisample = TRUE,                  plot_internal_nodes = TRUE,                  shared_clones = FALSE,                  point_alpha = 0.5)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"more-detailed-examples","dir":"","previous_headings":"Example","what":"More detailed examples","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"detailed examples explore different features customisations can achieved SpatialPhyloPlot please see vignette explores different plotting options.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/index.html","id":"future-developments","dir":"","previous_headings":"","what":"Future Developments","title":"Automated Plotting of Phylogenetic Trees on Spatial Transcriptomics Data","text":"idea feature like see implemented package please submit GitHub issue ’ll see can ! :)","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/SpatialPhyloPlot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot spatial phylogenetic trees — SpatialPhyloPlot","title":"Plot spatial phylogenetic trees — SpatialPhyloPlot","text":"function plotting spatial phylogenetic trees Visium 10X data.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/SpatialPhyloPlot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot spatial phylogenetic trees — SpatialPhyloPlot","text":"","code":"SpatialPhyloPlot(   visium_version,   newick_file,   image_file,   tissue_positions_file,   clone_df,   scale_factors,   clone_group_column,   clone_barcode_column = \"Barcode\",   palette = \"default\",   plot_points = TRUE,   plot_polygon = FALSE,   point_alpha = 0.8,   point_size = 1.5,   point_shape = 19,   hull_alpha = 0,   hull_expansion = 0.005,   centroid_alpha = 0.9,   centroid_size = 8,   plot_internal_nodes = FALSE,   internal_node_colour = \"grey80\",   internal_node_size = 3,   internal_node_alpha = 0.5,   segment_alpha = 0.8,   segment_width = 2,   segment_colour = \"grey\",   fig_offset_x = 0,   fig_offset_y = 0,   multisample = FALSE,   shared_clones = FALSE,   plot_connections = FALSE,   image_file_left = NA,   image_file_right = NA,   image_file_top = NA,   image_file_bottom = NA,   clone_df_left = NA,   clone_df_right = NA,   clone_df_top = NA,   clone_df_bottom = NA,   tissue_positions_file_left = NA,   tissue_positions_file_right = NA,   tissue_positions_file_top = NA,   tissue_positions_file_bottom = NA,   scale_factors_left = NA,   scale_factors_right = NA,   scale_factors_top = NA,   scale_factors_bottom = NA,   connection_width = 1,   connection_colour = \"grey\",   nestedness = 10,   origin_coord = NA,   origin_name = \"diploid\",   ... )"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/SpatialPhyloPlot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot spatial phylogenetic trees — SpatialPhyloPlot","text":"visium_version version Visium used. either `\"V1\"` `\"V2\"` newick_file file path phylogenetic tree Newick format saved `.new` file. image_file file path hires Visium 10X png image plot. tissue_positions_file file path Visium 10X `tissue_positions_list.csv` file V1 `tissue_positions.csv` file V2. clone_df `data.frame` listing barcode belongs clone. scale_factors path `scalefactors_json.json` file produced SpaceRanger. clone_group_column name column `clone_df` indicates clones. clone_barcode_column name column `clone_df` indicates barcode. palette named list colours clone. Defaults `RColorBrewer` `Set2` followed `pals` `alphabet` sets. plot_points Whether individual Visium spots plotted. Defaults `TRUE`. plot_polygon Whether polygon plotted clone. Defaults `FALSE`. point_alpha alpha transparency value points, default `0.8`. point_size size Visium spot points, default `1.5`. point_shape shape use Visium spot points, default `19`. hull_alpha alpha transparency value polygons/hulls plotted, default `0` (plotted). hull_expansion hull/polygon extension amount, default `0.005`. centroid_alpha alpha transparency value centroids plotted part phylogenetic tree, default `0.9`. centroid_size size plotted centroid points, default `8`. plot_internal_nodes Whether plot internal nodes tree. Defaults `FALSE`. internal_node_colour Colour used represent internal nodes. Defaults `\"grey80\"`. internal_node_size Size internal nodes. Defaults `3`. internal_node_alpha Alpha internal nodes. Defaults `0.5` segment_alpha alpha transparency value phylogenetic tree segments, default `0.8`. segment_width width phylogenetic tree segments, default `2`. segment_colour colour phylogenetic tree segments, default `\"grey\"`. fig_offset_x offset adjust histology image x_end location, required. Default `0.011`, adjustments recommended. fig_offset_y offset adjust histology image y location, required. Default `0.011` adjustments recommended. multisample Whether multiple samples plotted phylogenetic tree. Defaults `FALSE`. shared_clones Whether clones appear multiple samples. Defaults `FALSE`. plot_connections Whether connections plotted clones present multiple samples. Defaults `FALSE`. image_file_left running multisample mode; file path hires Visium 10X png image plot left main sample. image_file_right running multisample mode; file path hires Visium 10X png image plot right main sample. image_file_top running multisample mode; file path hires Visium 10X png image plot main sample. image_file_bottom running multisample mode; file path hires Visium 10X png image plot main sample. clone_df_left running multisample mode;  `data.frame` listing barcode belongs clone belonging sample plotted left main sample. clone_df_right running multisample mode;  `data.frame` listing barcode belongs clone belonging sample plotted right main sample. clone_df_top running multisample mode;  `data.frame` listing barcode belongs clone belonging sample plotted main sample. clone_df_bottom running multisample mode;  `data.frame` listing barcode belongs clone belonging sample plotted main sample. tissue_positions_file_left running multisample mode; path Visium 10X `tissue_positions_list.csv` file V1 `tissue_positions.csv` file V2, belonging sample plotted left main sample. tissue_positions_file_right running multisample mode; path Visium 10X `tissue_positions_list.csv` file V1 `tissue_positions.csv` file V2, belonging sample plotted right main sample. tissue_positions_file_top running multisample mode; path Visium 10X `tissue_positions_list.csv` file V1 `tissue_positions.csv` file V2, belonging sample plotted main sample. tissue_positions_file_bottom running multisample mode; path Visium 10X `tissue_positions_list.csv` file V1 `tissue_positions.csv` file V2, belonging sample plotted main sample. scale_factors_left running multisample mode; path Visium 10X `scalefactors_json.json` file produced SpaceRanger, belonging sample plotted left main sample. scale_factors_right running multisample mode; path Visium 10X `scalefactors_json.json` file produced SpaceRanger, belonging sample plotted right main sample. scale_factors_bottom running multisample mode; path Visium 10X `scalefactors_json.json` file produced SpaceRanger, belonging sample plotted main sample. connection_width width connecting segment linking clones samples. Defaults `1`. connection_colour colour connecting segment linking clones samples. Defaults `grey`. nestedness Roughly, many layers internal nodes phylogenetic tree. Defaults `10`. Consider increasing notice missing connections, otherwise leave . origin_coord xy coordinates plot \"origin\" phylogenetic tree. Defaults `NA`. Example: `c(0,1)` top left corner. origin_name Name origin clone phylogenetic tree. Defaults `\"diploid\"` line MEDICC2 output. scale_factors_topIf running multisample mode; path Visium 10X `scalefactors_json.json` file produced SpaceRanger, belonging sample plotted top main sample.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/SpatialPhyloPlot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot spatial phylogenetic trees — SpatialPhyloPlot","text":"ggplot2 object tissue, clones, phylogenetic trees plotted together.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/calculate_centroids.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate centroids — calculate_centroids","title":"Calculate centroids — calculate_centroids","text":"Calculate centroids","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/calculate_centroids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate centroids — calculate_centroids","text":"","code":"calculate_centroids(   newick_df,   coordinates_df_scaled,   n_repeats,   origin_coord,   origin_name )"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/calculate_centroids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate centroids — calculate_centroids","text":"newick_df `data.frame` containing reformatted Newick phylogenetic tree information. coordinates_df_scaled `data.frame` containing scaled spot coordinates barcodes correspond . n_repeats Roughly, many layers internal nodes phylogenetic tree. Defaults `10`. Consider increasing notice missing connections, otherwise leave . origin_coord xy coordinates plot \"origin\" phylogenetic tree. Defaults `NA`. Example: `c(0,1)` top left corner. origin_name Name origin clone phylogenetic tree. Defaults `\"diploid\"` line MEDICC2 output.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/calculate_centroids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate centroids — calculate_centroids","text":"`data.frame` centroids calculated clone phylogenetic tree.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/connect_multisample.html","id":null,"dir":"Reference","previous_headings":"","what":"Create connections between clones in multiple samples — connect_multisample","title":"Create connections between clones in multiple samples — connect_multisample","text":"Create connections clones multiple samples","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/connect_multisample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create connections between clones in multiple samples — connect_multisample","text":"","code":"connect_multisample(combined_newick_df)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/connect_multisample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create connections between clones in multiple samples — connect_multisample","text":"combined_newick_df concatenated Newick `data.frame` coordinates clone sample.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/connect_multisample.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create connections between clones in multiple samples — connect_multisample","text":"`data.frame` start end coordinates main plot others.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/create_segments.html","id":null,"dir":"Reference","previous_headings":"","what":"Create phylogenetic tree segments — create_segments","title":"Create phylogenetic tree segments — create_segments","text":"Create phylogenetic tree segments","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/create_segments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create phylogenetic tree segments — create_segments","text":"","code":"create_segments(newick_df)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/create_segments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create phylogenetic tree segments — create_segments","text":"newick_df `data.frame` containing reformatted Newick phylogenetic tree information.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/create_segments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create phylogenetic tree segments — create_segments","text":"`data.frame` coordinates segment phylogenetic tree.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_crop_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Crop raster image — img_crop_raster","title":"Crop raster image — img_crop_raster","text":"Crop raster image","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_crop_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crop raster image — img_crop_raster","text":"","code":"img_crop_raster(raster, hires_scale, tissue_positions)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_crop_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crop raster image — img_crop_raster","text":"raster image magick object plotted tissue. hires_scale High resolution scale factor json file. tissue_positions `data.frame` pixel coordinates spot.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_crop_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crop raster image — img_crop_raster","text":"magick image object cropped appropriate bounding box.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_get_raster.html","id":null,"dir":"Reference","previous_headings":"","what":"Get Raster Image — img_get_raster","title":"Get Raster Image — img_get_raster","text":"Get Raster Image","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_get_raster.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get Raster Image — img_get_raster","text":"","code":"img_get_raster(image_path)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_get_raster.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get Raster Image — img_get_raster","text":"image_path File path underlying Visium 10X tissue image, plotted.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_get_raster.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get Raster Image — img_get_raster","text":"image magick object used plot tissue image.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_name_colours.html","id":null,"dir":"Reference","previous_headings":"","what":"Name colours for plotting — img_name_colours","title":"Name colours for plotting — img_name_colours","text":"Name colours plotting","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_name_colours.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Name colours for plotting — img_name_colours","text":"","code":"img_name_colours(newick_df)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_name_colours.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Name colours for plotting — img_name_colours","text":"newick_df data frame generated .new phylogenetic tree file.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_name_colours.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Name colours for plotting — img_name_colours","text":"named list colour palette associated list clones.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot tree and spots — img_plot","title":"Plot tree and spots — img_plot","text":"Plot tree spots","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot tree and spots — img_plot","text":"","code":"img_plot(   raster_img,   raster_img_left,   raster_img_right,   raster_img_top,   raster_img_bottom,   coordinates_df_scaled,   coordinates_df_scaled_left,   coordinates_df_scaled_right,   coordinates_df_scaled_top,   coordinates_df_scaled_bottom,   newick_df,   newick_df_left,   newick_df_right,   newick_df_top,   newick_df_bottom,   from_to_df,   from_to_df_left,   from_to_df_right,   from_to_df_top,   from_to_df_bottom,   plot_points = TRUE,   plot_polygon = FALSE,   point_alpha = 0.8,   point_size = 1.5,   point_shape = 19,   hull_alpha = 0,   hull_expansion = 0.005,   centroid_alpha = 0.9,   centroid_size = 8,   plot_internal_nodes = FALSE,   internal_node_colour = \"grey80\",   internal_node_size = 3,   internal_node_alpha = 0.5,   segment_alpha = 0.8,   segment_width = 2,   segment_colour = \"grey\",   fig_offset_x = 0,   fig_offset_y = 0,   palette,   multisample,   shared_clones,   plot_connections,   connections_coords,   connection_width,   connection_colour )"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot tree and spots — img_plot","text":"raster_img raster image object containing tissue image plotted. raster_img_left raster image object containing tissue image plotted left main image. raster_img_right raster image object containing tissue image plotted right main image. raster_img_top raster image object containing tissue image plotted main image. raster_img_bottom raster image object containing tissue image plotted main image. coordinates_df_scaled `data.frame` scaled (0-1) spot coordinates Visium barcode. coordinates_df_scaled_left `data.frame` scaled (0-1) spot coordinates Visium barcode plotted left main tissue. coordinates_df_scaled_right `data.frame` scaled (0-1) spot coordinates Visium barcode plotted right main tissue. coordinates_df_scaled_top `data.frame` scaled (0-1) spot coordinates Visium barcode plotted main tissue. coordinates_df_scaled_bottom `data.frame` scaled (0-1) spot coordinates Visium barcode plotted main tissue. newick_df newick `data.frame` generated .new phylogenetic tree file. newick_df_left newick `data.frame` generated .new phylogenetic tree file connections plot left main tissue. newick_df_right newick `data.frame` generated .new phylogenetic tree file connections plot right main tissue. newick_df_top newick `data.frame` generated .new phylogenetic tree file connections plot main tissue. newick_df_bottom newick `data.frame` generated .new phylogenetic tree file connections plot main tissue. from_to_df `data.frame` containing start end coordinates branch phylogenetic tree. from_to_df_left `data.frame` containing start end coordinates branch phylogenetic tree plotted left main tissue. from_to_df_right `data.frame` containing start end coordinates branch phylogenetic tree plotted right main tissue. from_to_df_top `data.frame` containing start end coordinates branch phylogenetic tree plotted main tissue. from_to_df_bottom `data.frame` containing start end coordinates branch phylogenetic tree plotted main tissue. plot_points Whether individual Visium spots plotted. Defaults `TRUE`. plot_polygon Whether polygon plotted clone. Defaults `FALSE`. point_alpha alpha transparency value points, default `0.8`. point_size size Visium spot points, default `1.5`. point_shape shape use Visium spot points, default `19`. hull_alpha alpha transparency value polygons/hulls plotted, default `0` (plotted). hull_expansion hull/polygon extension amount, default `0.005`. centroid_alpha alpha transparency value centroids plotted part phylogenetic tree, default `0.9`. centroid_size size plotted centroid points, default `8`. plot_internal_nodes Whether plot internal nodes tree. Defaults `FALSE`. internal_node_colour Colour used represent internal nodes. Defaults `\"grey80\"`. internal_node_size Size internal nodes. Defaults `3`. internal_node_alpha Alpha internal nodes. Defaults `0.5` segment_alpha alpha transparency value phylogenetic tree segments, default `0.8`. segment_width width phylogenetic tree segments, default `2`. segment_colour colour phylogenetic tree segments, default `\"grey\"`. fig_offset_x offset adjust histology image x_end location, required. Default `0.011`, adjustments recommended. fig_offset_y offset adjust histology image y location, required. Default `0.011` adjustments recommended. palette named list colours clone. Defaults `RColorBrewer` `Set2` followed `pals` `alphabet` sets. multisample Whether multiple samples plotted phylogenetic tree. Defaults `FALSE`. shared_clones Whether clones appear multiple samples. Defaults `FALSE`. plot_connections Whether connections plotted clones present multiple samples. Defaults `FALSE`. connections_coords `data.frame` coordinates linking clones found multiple samples. connection_width width connecting segment linking clones samples. Defaults `1`. connection_colour colour connecting segment linking clones samples. Defaults `grey`.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/img_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot tree and spots — img_plot","text":"ggplot2 object clones, trees, tissue image plotted together.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/match_clone_barcodes.html","id":null,"dir":"Reference","previous_headings":"","what":"Match clone names and spot barcodes — match_clone_barcodes","title":"Match clone names and spot barcodes — match_clone_barcodes","text":"Match clone names spot barcodes","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/match_clone_barcodes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match clone names and spot barcodes — match_clone_barcodes","text":"","code":"match_clone_barcodes(   coordinates_df_scaled,   clones_df,   clone_group_name,   coordinate_barcode_name = \"barcode\",   clone_barcode_name = \"Barcode\" )"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/match_clone_barcodes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match clone names and spot barcodes — match_clone_barcodes","text":"coordinates_df_scaled `data.frame` scaled spot coordinates. clones_df `data.frame` indicating barcodes correspond clones. clone_group_name name column contains clone grouping information. coordinate_barcode_name name column contains barcodes coordinates `data.frame`. clone_barcode_name name column contains barcodes clones `data.frame`.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/match_clone_barcodes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match clone names and spot barcodes — match_clone_barcodes","text":"`data.frame` Visium 10X barcodes coordinates matched clone labels.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/newick_to_graph_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Newick tree to graph data frame — newick_to_graph_df","title":"Newick tree to graph data frame — newick_to_graph_df","text":"Newick tree graph data frame","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/newick_to_graph_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Newick tree to graph data frame — newick_to_graph_df","text":"","code":"newick_to_graph_df(newick_file)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/newick_to_graph_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Newick tree to graph data frame — newick_to_graph_df","text":"newick_file path `.new` file containing phylogenetic tree Newick format.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/newick_to_graph_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Newick tree to graph data frame — newick_to_graph_df","text":"`data.frame` containing phylogenetic tree information re-formatted `data.frame`.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/rotate_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Image Coordinates — rotate_coordinates","title":"Rotate Image Coordinates — rotate_coordinates","text":"Rotate Image Coordinates","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/rotate_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Image Coordinates — rotate_coordinates","text":"","code":"rotate_coordinates(coordinates_df)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/rotate_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Image Coordinates — rotate_coordinates","text":"coordinates_df `data.frame` spot coordinates extracted tissue positions file.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/rotate_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Image Coordinates — rotate_coordinates","text":"`data.frame` rotated Visium 10X spot coordinates.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/scale_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Scale Coordinates — scale_coordinates","title":"Scale Coordinates — scale_coordinates","text":"Scale Coordinates","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/scale_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Scale Coordinates — scale_coordinates","text":"","code":"scale_coordinates(coordinates_df, tissue_positions)"},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/scale_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Scale Coordinates — scale_coordinates","text":"coordinates_df `data.frame` rotated spot coordinates. tissue_positions `data.frame` tissue positions spot.","code":""},{"path":"https://wedge-lab.github.io/SpatialPhyloPlot/reference/scale_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Scale Coordinates — scale_coordinates","text":"`data.frame` Visium 10X coordinates scaled 0-1.","code":""}]
